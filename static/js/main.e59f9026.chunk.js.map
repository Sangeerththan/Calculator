{"version":3,"sources":["components/calculator/styled/index.js","components/calculator/index.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","el","value","target","getAttribute","includes","chooseOperation","compute","result","previousNumber","parseFloat","currentNumber","isNaN","onClick","String","slice","data","undefined","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59f9026.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Container =  styled.div`\n    display: grid;\n    justify-content: center;\n    align-content: center;\n    width: 400px;\n    margin: 40px auto;\n    grid-template-columns: repeat(4, 100px);\n    grid-template-rows: minmax(120px, auto) repeat(5, 100px);\n    box-shadow: 2px 2px 10px #333;\n    border-radius: 10px;\n`\nexport const Screen = styled.div`\n    grid-column: 1 / -1;\n    background-color: rgba(60, 64, 67, 0.75);\n    display: flex;\n    justify-content; space-around;\n    flex-direction: column;\n    padding: 10px;\n    word-wrap: break-word;\n    word-break; break-all;\n    text-align: right;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n`\nexport const Previous = styled.div`\n    color: rgba(255, 255, 255, 0.75);\n    font-size: 1.5rem;\n`\n\nexport const Current = styled.div`\n    color: white;\n    font-size: 2.5rem;\n`\nexport const Button = styled.button`\n    cursor: pointer;\n    font-size: 2rem;\n    border: 1px outset white;\n    outline: none;\n    background-color: rgba(255, 255, 255, 0.75);\n    &:hover {\n        background-color: rgba(255, 255, 255, 0.9);\n    }\n\n${({gridSpan}) => gridSpan && `grid-column: span ${gridSpan};`}\n${({operation}) => operation && `background-color: gray;`}\n${({control}) => control && `background-color: skyblue;`}\n${({equals}) => equals && `border-bottom-right-radius: 10px; background-color: gray;`}\n${({period}) => period && `border-bottom-left-radius: 10px; background-color: skyblue;`}\n`","import React, { useState } from \"react\";\nimport { Container,Screen, Current, Previous, Button } from \"./styled\";\n\nexport default function Calculator() {\n    const [previous, setPrevious] = useState('')\n    const [current, setCurrent] = useState('')\n    const [operation, setOperation] = useState('')\n\n    const appendValue = (el) => {\n        const value = el.target.getAttribute('data')\n\n        if(value === '.' && current.includes('.')) return\n        setCurrent(current + value)\n    }\n\n    const handleDelete = () => {\n        setCurrent(String(current).slice(0, -1))\n    }\n\n    const handleAllClear = () => {\n        setCurrent('')\n        setPrevious('')\n        setOperation('')\n    }\n\n    const chooseOperation = (el) => {\n        if(current === '') return\n        if(previous !== ''){\n            let value = compute();\n            setPrevious(value)\n        } else {\n            setPrevious(current)\n        }\n\n        setCurrent('')\n        setOperation(el.target.getAttribute('data'))\n\n    }\n\n    const equals = () => {\n        let value = compute();\n        if(value == undefined || value == null) return\n\n        setCurrent(value)\n        setPrevious('')\n        setOperation('')\n    }\n\n    const compute = () => {\n\n        let result\n        let previousNumber = parseFloat(previous)\n        let currentNumber = parseFloat(current)\n\n        if(isNaN(previousNumber) || isNaN(currentNumber)) return\n\n        switch(operation) {\n            case '÷':\n                result = previousNumber / currentNumber;\n                break;\n            case '×':\n                result = previousNumber * currentNumber;\n                break;\n            case '+':\n                result = previousNumber + currentNumber;\n                break;\n            case '-':\n                result = previousNumber - currentNumber;\n                break;\n            default:\n                return\n        }\n\n        return result;\n\n    }\n    return (\n        <Container>\n            <Screen>\n                <Previous>{previous} {operation}</Previous>\n                <Current>{current}</Current>\n            </Screen>\n            <Button onClick={handleAllClear} gridSpan={2} control>AC</Button>\n            <Button onClick={handleDelete} control>DEL</Button>\n            <Button data={'÷'} onClick={chooseOperation} operation>÷</Button>\n            <Button data={'7'} onClick={appendValue}>7</Button>\n            <Button data={'8'} onClick={appendValue}>8</Button>\n            <Button data={'9'} onClick={appendValue}>9</Button>\n            <Button data={'×'} onClick={chooseOperation} operation>×</Button>\n            <Button data={'4'} onClick={appendValue}>4</Button>\n            <Button data={'5'} onClick={appendValue}>5</Button>\n            <Button data={'6'} onClick={appendValue}>6</Button>\n            <Button data={'+'} onClick={chooseOperation} operation>+</Button>\n            <Button data={'1'} onClick={appendValue}>1</Button>\n            <Button data={'2'} onClick={appendValue}>2</Button>\n            <Button data={'3'} onClick={appendValue}>3</Button>\n            <Button data={'-'} onClick={chooseOperation} operation>-</Button>\n            <Button data={'.'} period onClick={appendValue}>.</Button>\n            <Button data={'0'} onClick={appendValue}>0</Button>\n            <Button gridSpan={2} onClick={equals} equals>=</Button>\n        </Container>\n    )        \n}","import Calculator from \"./components/calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}